source('~/TestPipeline1.R', echo=TRUE)
library(gkmSVM)
library(seqinr)
library(readtext)
posfn= 'positives.fa'
negfn= 'negatives.fa'
kernelfn= 'test_kernel.txt' #kernel matrix
setwd("/Users/Peter/Desktop/RTest")
#lines <- readtext("testrun.txt")
fileName <- 'testrun.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\n")
listofseqs<-c()
k<-1
for (i in 4:length(b[[1]])){
if((i-4)%%5==0){
listofseqs[[k]]<-((b[[1]])[[i]])
k<-k+1
}
}
i<-4
print(listofseqs[1:i-1])
print(listofseqs[i])
print(listofseqs[i+1:length(listofseqs)])
print(listofseqs)
library(gkmSVM)
library(seqinr)
library(readtext)
posfn= 'positives.fa'
negfn= 'negatives.fa'
kernelfn= 'test_kernel.txt' #kernel matrix
setwd("/Users/Peter/Desktop/RTest")
#lines <- readtext("testrun.txt")
fileName <- 'testrun.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\n")
listofseqs<-c()
k<-1
for (i in 4:length(b[[1]])){
if((i-4)%%5==0){
listofseqs[[k]]<-((b[[1]])[[i]])
k<-k+1
}
}
i<-4
print(listofseqs[1:i-1])
print(listofseqs[i])
print(listofseqs[i+1:length(listofseqs)])
print(listofseqs[length(listofseqs)])
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
library(gkmSVM)
library(seqinr)
library(readtext)
posfn= 'positives.fa'
negfn= 'negatives.fa'
kernelfn= 'test_kernel.txt' #kernel matrix
setwd("/Users/Peter/Desktop/RTest")
#lines <- readtext("testrun.txt")
fileName <- 'testrun.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\n")
listofseqs<-c()
k<-1
for (i in 4:length(b[[1]])){
if((i-4)%%5==0){
listofseqs[[k]]<-((b[[1]])[[i]])
k<-k+1
}
}
i<-4
print(listofseqs[1:i-1])
print(listofseqs[i])
print(length(listofseqs[i+1:length(listofseqs)-i]))
library(gkmSVM)
library(seqinr)
library(readtext)
posfn= 'positives.fa'
negfn= 'negatives.fa'
kernelfn= 'test_kernel.txt' #kernel matrix
setwd("/Users/Peter/Desktop/RTest")
#lines <- readtext("testrun.txt")
fileName <- 'testrun.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\n")
listofseqs<-c()
k<-1
for (i in 4:length(b[[1]])){
if((i-4)%%5==0){
listofseqs[[k]]<-((b[[1]])[[i]])
k<-k+1
}
}
i<-4
print(length(listofseqs))
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
library(gkmSVM)
library(seqinr)
library(readtext)
posfn= 'positives.fa'
negfn= 'negatives.fa'
kernelfn= 'test_kernel.txt' #kernel matrix
setwd("/Users/Peter/Desktop/RTest")
#lines <- readtext("testrun.txt")
fileName <- 'testrun.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\n")
listofseqs<-c()
k<-1
for (i in 4:length(b[[1]])){
if((i-4)%%5==0){
listofseqs[[k]]<-((b[[1]])[[i]])
k<-k+1
}
}
i<-4
#print(listofseqs[1:i-1])
#print(listofseqs[i])
print(length(listofseqs))
print(length(listofseqs[i+1:6]))
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
warnings()
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
warnings()
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
typeof(negativeseqs)
print(negativeseqs)
typeof(listofseqs)
length(listofseqs)
data_list <- list(c("Jan","Feb","Mar"))
print(data_list)
data_list <- c("bruh")
print(data_list)
data_list[4]
print(data_list)
data_list[4]="ok"
print(data_list)
typeof(data_list)
unlist(negativeseqs)
p=unlist(negativeseqs)
typeof(p)
write.fasta(p, negative_sequence_names, negative_file_names, open = "w", nbchar = 60, as.string = TRU
write.fasta(p, negative_sequence_names, negative_file_names, open = "w", nbchar = 60, as.string = TRUE)
write.fasta("AUG", "testseq1", "outfile.fa", open = "w", nbchar = 60, as.string = TRUE)
a=("AUG","ACG","AUA")
a="AUG","ACG","AUA"]
a=["AUG","ACG","AUA"]
a=c("AUG","ACG","AUA")
b=c("Name1","Name2","Name3")
d=c("outfile1.fa","outfile2.fa","outfile3.fa")
write.fasta(a, b, d, open = "w", nbchar = 60, as.string = TRUE)
a <- list("AUG","ACG","ACC")
write.fasta(a, b, d, open = "w", nbchar = 60, as.string = TRUE)
install.packages("dpylr")
install.packages("dplyr")
install.packages("dplyr")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/RTest/outputtest.R', echo=TRUE)
seq = c("AAGGTTTTGCCAA", "TTTTGCCAAGGAA", "TTTAAGGTGCCAA"))
writeFasta(exampleData, "example.fasta")
source('~/Desktop/RTest/outputtest.R', echo=TRUE)
source('~/Desktop/RTest/outputtest.R', echo=TRUE)
require(dplyr)
writeFasta<-function(data, filename){
fastaLines = c()
for (rowNum in 1:nrow(data)){
fastaLines = c(fastaLines, as.character(paste(">", data[rowNum,"name"], sep = "")))
fastaLines = c(fastaLines,as.character(data[rowNum,"seq"]))
}
fileConn<-file(filename)
writeLines(fastaLines, fileConn)
close(fileConn)
}
exampleData = dplyr::data_frame(name = c("seq1", "seq2", "seq3","seq4"),
seq = c("AAGGTTTTGCCAA", "TTTTGCCAAGGAA", "TTTAAGGTGCCAA","TAA")
source('~/Desktop/RTest/outputtest.R', echo=TRUE)
source('~/Desktop/RTest/outputtest.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
library(gkmSVM)
library(seqinr)
library(readtext)
require(dplyr)
posfn= 'positives.fa'
negfn= 'negatives.fa'
kernelfn= 'test_kernel.txt' #kernel matrix
setwd("/Users/Peter/Desktop/RTest")
#lines <- readtext("testrun.txt")
fileName <- 'testrun.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\n")
listofseqs<-c()
k<-1
for (i in 4:length(b[[1]])){
if((i-4)%%5==0){
listofseqs[[k]]<-((b[[1]])[[i]])
k<-k+1
}
}
i<-30
negative_sequence_names<-c()
k<-1
for (i in 1:length(listofseqs)-1){
negative_sequence_names[[k]]=(paste("negative sequence",i))
k<-k+1
}
negative_file_names<-c()
k<-2
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
source('~/.active-rstudio-document', echo=TRUE)
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\n")
print(b)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
print(b)
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
print(b)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
for (c in b){
print(c[0:1])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
for (c in b){
print(c[0:1])
# if(a[0:1]=="\n"){
#   print("found!")
# }
}
print(length(b[1]))
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
for (c in b){
print(c[0:1])
# if(a[0:1]=="\n"){
#   print("found!")
# }
}
print(typeof(b))
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
for (c in b){
print(c[0:1])
# if(a[0:1]=="\n"){
#   print("found!")
# }
}
print(b)
source('~/.active-rstudio-document', echo=TRUE)
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
for (c in b){
print(c[0:1])
# if(a[0:1]=="\n"){
#   print("found!")
# }
}
print(b[1])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
# for (c in b){
#   print(c[0:1])
#   # if(a[0:1]=="\n"){
#   #   print("found!")
#   # }
# }
print((b[1])[1])
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
# for (c in b){
#   print(c[0:1])
#   # if(a[0:1]=="\n"){
#   #   print("found!")
#   # }
# }
print((b[[1]])[1])
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
# for (c in b){
#   print(c[0:1])
#   # if(a[0:1]=="\n"){
#   #   print("found!")
#   # }
# }
print((b[[1]]))
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
# for (c in b){
#   print(c[0:1])
#   # if(a[0:1]=="\n"){
#   #   print("found!")
#   # }
# }
print((b[[1]])[1])
library(readtext)
setwd("/Users/Peter/Desktop/RTest")
fileName <- 'test_kernel1.txt'
a=readChar(fileName, file.info(fileName)$size)
b=strsplit(a,"\t")
# for (c in b){
#   print(c[0:1])
#   # if(a[0:1]=="\n"){
#   #   print("found!")
#   # }
# }
print((b[[1]])[2])
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
capture.output(diversity_score, file = "diversity.txt")
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RTest/TestPipeline1.R', echo=TRUE)
source('~/Desktop/RNALibrary/TestPipeline1.R', echo=TRUE)
debugSource('~/Desktop/RNALibrary/TestPipeline1.R', echo=TRUE)
debugSource('~/Desktop/RNALibrary/TestPipeline1.R', echo=TRUE)
debugSource('~/Desktop/RNALibrary/TestPipeline1.R', echo=TRUE)
debugSource('~/Desktop/RNALibrary/TestPipeline1.R', echo=TRUE)
